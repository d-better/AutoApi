<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.better.apitest.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.better.apitest.domain.Project">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="auth_users_id" jdbcType="BIGINT" property="authUsersId" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="belong_flag" jdbcType="CHAR" property="belongFlag" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_name, project_type, auth_users_id, create_by, create_date, update_by, 
    update_date, remarks, del_flag, belong_flag, `sequence`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_project
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAllList" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_project
    where del_flag = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.better.apitest.domain.Project">
    insert into sys_project (id, project_name, project_type, 
      auth_users_id, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag, belong_flag, `sequence`
      )
    values (#{id,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, #{projectType,jdbcType=INTEGER}, 
      #{authUsersId,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=BIT}, #{belongFlag,jdbcType=CHAR}, #{sequence,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.better.apitest.domain.Project">
    insert into sys_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="authUsersId != null">
        auth_users_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="belongFlag != null">
        belong_flag,
      </if>
      <if test="sequence != null">
        `sequence`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=INTEGER},
      </if>
      <if test="authUsersId != null">
        #{authUsersId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="belongFlag != null">
        #{belongFlag,jdbcType=CHAR},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.better.apitest.domain.Project">
    update sys_project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=INTEGER},
      </if>
      <if test="authUsersId != null">
        auth_users_id = #{authUsersId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="belongFlag != null">
        belong_flag = #{belongFlag,jdbcType=CHAR},
      </if>
      <if test="sequence != null">
        `sequence` = #{sequence,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.better.apitest.domain.Project">
    update sys_project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=INTEGER},
      auth_users_id = #{authUsersId,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      belong_flag = #{belongFlag,jdbcType=CHAR},
      `sequence` = #{sequence,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>